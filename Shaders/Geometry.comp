#version 450

#define LOCAL_INVOCATION 8
layout(local_size_x = LOCAL_INVOCATION) in;
layout(local_size_y = LOCAL_INVOCATION) in;
layout(local_size_z = 1) in;

#include "./Partial/Mesh.comp"

layout(set = 0, binding = 0) buffer Mesh {
  MeshBufferData mesh;
};

void main() {
  uint index = (gl_GlobalInvocationID.y * (mesh.VerticesSize / 2)) + gl_GlobalInvocationID.x;
  
  if (index >= mesh.VerticesSize)
    return;
  
  if (index == 0) {
    mesh.Center = mesh.Transformation * mesh.Center;
  }

  mesh.Vertices[index] = mesh.Transformation * mesh.Vertices[index];
  mesh.Normals[index] = mesh.Transformation * mesh.Normals[index];
}